buildscript {
    ext {
        orgMapstructVersion = '1.3.0.Final'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'com.github.sherter.google-java-format' version '0.8'
}

apply from: "$rootProject.projectDir/verifyFormatHooks.gradle"
apply from: "$rootProject.projectDir/queryDsl.gradle"

group = 'com.harvanir.gradle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct-jdk8:${orgMapstructVersion}"
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${orgMapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

clean {
    def out = file("out")

    if (out.exists()) {
        println("clean generated by idea...")
        delete "out"
    }
}

compileQuerydsl.dependsOn(verifyGoogleJavaFormat)